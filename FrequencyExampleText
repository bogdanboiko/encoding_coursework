Типи моделей життєвого циклу

прогнозовані моделі життєвого циклу - в
основи цих моделей лежить чітке
планування усіх стадій процесу розробки
програмного забезпечення

адаптивні моделі життєвого циклу (так
звані гнучкі технології) - особливістю цих
моделей є сприйняття та адаптація процесу
розробки під потреби замовника та ринку.

Прогнозовані моделі

каскадна модель;

V-подібна модель;

модель еволюційного прототипування;

модель швидкої розробки;

інкрементна модель;

спіральна модель.

Адаптивні моделі

Scrum

Extreme Programming, ХР

Adaptive Software development, ASD

Dynamic System Development Model, DSDM

Feature Driven Development, FDD.

Каскадна модель

Каскадна модель

Класична модель.

Автор Уінстон Ройс, 1970 р.

Розробка характеризується, як
послідовність етапів, перехід на наступний ,
нижній етап , відбувається лише після
закінчення попереднього.

Основні етапи каскадної моделі

Аналіз

Проектування

Реалізація

Тестування

Впровадження

Супровід

Каскадна модель

Аналіз

Реалізація

Тестування

Проектування

Впровадження

Супровід

Переваги

Дана модель є простою та зрозумілою, вимогою для успішного
завершення програмного продукту є виконання запланованих
дій; фази моделі гарно визначені.

Дозволяє учасникам проекту, що закінчили своїх фази, брати
участь в інших проектах;

Зручна для використання менеджером проекту: сприяє
здійсненню строгого контролю над перебігом проекту,
полегшує роботу над розробкою проектного плану;

Забезпечує гарний контроль над якістю проекту. Усі закінчені
фази та отримані дані можна переглянути. Ця процедура
забезпечує визначення якості програмної системи.

Недоліки

Реальні проекти часто потребують
відхилення від стандартної послідовності
виконання.

Результати проекту доступні лише в кінці
роботи.

Спіральна модель

Спіральна модель

Класичний приклад застосування
еволюційної стратегії конструювання.

Автор Баррі Боем, 1988 р.

Порівняно з каскадною моделлю,
додається новий елемент – аналіз ризиків.

Найпоширеніші ризики при розробці
програмного продукту

Дефіцит спеціалістів

Нереалістичні терміни та бюджети

Реалізація невідповідної функціональності

Розробка неправильного інтерфейсу користувача

Непотрібна оптимізація

Безперервний потік змін

Нестача інформації про зовнішні компоненти, що визначають
оточення, втягнене в інтеграцію

Недоліки в роботі, що виконується зовнішніми (по відношенню до
проекту) працівниками

Недоліки в продуктивності отриманої системи

"Розрив" в кваліфікації спеціалістів різних областей знань

Основні етапи спіральної моделі

Планування

Аналіз ризиків

Конструювання

Оцінювання

Спіральна модель

Аналіз ризиків

Планування

Оцінка
замовником

Конструювання

Лінія прийняття
рішення

Планування

Рис. 1.2 Спіральна модель життєвого циклу

Переваги

Найбільш реально відображає розробку
програмного забезпечення.

Дозволяє явно враховувати ризик на
кожному кроці еволюції.

Недоліки

Модель має досить складну структуру,
можуть виникнути проблеми з її
правильним використанням;

Дана модель може виявитися
надлишковою для певного виду проектів.
Так, якщо проект має низькі ризики,
невеликі розміри, то оцінка ризиків,
планування, прототипування для кожної
ітерації може виявитися надто затратним.

Інкрементна модель

Інкрементна модель

Об'єднує елементи класичної моделі з
ітераційною філософію розробки.

Сучасна реалізація – екстремальне
програмування.

Інкрементна модель

Аналіз

Проектування

Кодування

Тестування

Аналіз

Проектування

Кодування

Тестування

Аналіз

Проектування

Кодування

Тестування

1-й інкремент

2-й інкремент

3-й інкремент

Поставка

1-ого інкремента

Поставка

2-ого інкремента

Поставка

3-ого інкремента

Переваги

В результаті виконання кожного інкременту випускається
готовий функціональний продукт;

Адаптація до умов ринку;

Швидкий відгук замовника с приводу кожної розробленої
версії так як в кінці кожного інкременту створюється нова
версія системи, яка поставляється клієнту;

Проектні ризики розподілені по декількох інкрементах,
після закінчення кожного інкременту існує можливість
переглянути ризики, пов'язані з витратами та
дотриманням встановленого графіку.

Недоліки

Не передбачені ітерації в рамках
інкрементів. Інкременти мають лінійну
структури схожу на каскадну модель;

Визначення повного списку вимог має
відбуватися на початку проекту, що
забезпечити можливість формування
інкрементів;

Вимагає створення чітко визначених
інтерфейсів.A